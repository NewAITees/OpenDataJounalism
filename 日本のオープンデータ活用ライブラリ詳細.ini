# 日本のオープンデータ活用ライブラリ詳細

## 基本的なデータ処理ライブラリ

### データ操作・分析
- **pandas**: 表形式データの操作と分析
  ```bash
  uv add pandas
  ```
- **numpy**: 数値計算のための基礎ライブラリ
  ```bash
  uv add numpy
  ```

### データ可視化
- **matplotlib**: 基本的なグラフ描画
  ```bash
  uv add matplotlib
  ```
- **seaborn**: 統計データの可視化強化
  ```bash
  uv add seaborn
  ```
- **plotly**: インタラクティブな可視化
  ```bash
  uv add plotly
  ```

## API・スクレイピング

- **requests**: HTTP通信
  ```bash
  uv add requests
  ```
- **beautifulsoup4**: HTMLパース
  ```bash
  uv add beautifulsoup4
  ```

## 地理空間データ処理

- **geopandas**: 地理データの操作
  ```bash
  uv add geopandas
  ```
- **folium**: インタラクティブ地図の作成
  ```bash
  uv add folium
  ```
- **pyproj**: 座標系変換
  ```bash
  uv add pyproj
  ```
- **shapely**: 地理的図形の操作
  ```bash
  uv add shapely
  ```

## 日本特化ライブラリ

- **japanize-matplotlib**: matplotlibで日本語フォント対応
  ```bash
  uv add japanize-matplotlib
  ```
- **jageocoder**: 日本の住所・地名のジオコーディング
  ```bash
  uv add jageocoder
  ```
- **pandas-estat**: e-Stat APIを使ってデータをPandas DataFrameとして取得
  ```bash
  uv add pandas-estat
  ```

## 全てのライブラリをまとめてインストール

```bash
uv add pandas numpy matplotlib seaborn plotly requests beautifulsoup4 geopandas folium pyproj shapely japanize-matplotlib jageocoder pandas-estat
```

## 使用例

### e-Statからデータを取得して可視化する例

```python
import pandas as pd
import matplotlib.pyplot as plt
import japanize_matplotlib
from pandas_estat import set_appid, read_statsdata

# e-Statのアプリケーションキーを設定
set_appid("あなたのアプリケーションID")

# 統計表ID「0003191203」（事業活動の産業（中分類）別売上高（月次））のデータを取得
df = read_statsdata("0003191203")

# データの確認
print(df.head())

# データの整形と可視化：例えば「宿泊業，飲食サービス業」の月次売上高
hotel_restaurant = df[df["事業活動の産業"] == "宿泊業，飲食サービス業"]
hotel_restaurant = hotel_restaurant.set_index("時間軸（月次）")

plt.figure(figsize=(12, 6))
hotel_restaurant["value"].plot(kind='line', marker='o')
plt.title('宿泊業，飲食サービス業の月次売上高')
plt.ylabel('売上高（百万円）')
plt.grid(True)
plt.tight_layout()
plt.show()
```

### 地理データを地図上に表示する例

```python
import geopandas as gpd
import folium
import jageocoder

# 住所のジオコーディング
jageocoder.init()  # 初回実行時は住所辞書のダウンロードが必要
address = jageocoder.search("東京都千代田区霞が関1-3-1")

# 緯度経度情報を取得
lat = address['candidates'][0]['y']
lon = address['candidates'][0]['x']

# Foliumで地図を作成
m = folium.Map(location=[lat, lon], zoom_start=15)

# マーカーを追加
folium.Marker(
    location=[lat, lon],
    popup="総務省",
    tooltip="総務省"
).add_to(m)

# 地図を表示
m
```

## 参考情報

- [e-Stat API](https://www.e-stat.go.jp/api/)
- [pandas-estat GitHub](https://github.com/kotamya/pandas-estat)
- [jageocoder GitHub](https://github.com/t-sagara/jageocoder)
- [データカタログサイト DATA.GO.JP](https://www.data.go.jp/)
- [統計データ分析の基本ワークフロー](https://gihyo.jp/book/2018/978-4-7741-9698-7)
- [地理空間情報ライブラリ公式ドキュメント](https://geopandas.org/)